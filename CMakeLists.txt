PROJECT (coda)
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

SET(CMAKE_FIND_LIBRARY_PREFIXES ${CMAKE_STATIC_LIBRARY_PREFIX})
SET(FIND_LIBRARY_USE_LIB64_PATHS TRUE)
SET(LINK_SEARCH_END_STATIC TRUE)

FIND_PATH(INCLUDE_EXPAT expat.h)
INCLUDE_DIRECTORIES(${INCLUDE_EXPAT})
FIND_LIBRARY(LIB_EXPAT expat)

FIND_PATH(INCLUDE_JUDY Judy.h)
INCLUDE_DIRECTORIES(${INCLUDE_JUDY})
FIND_LIBRARY(LIB_JUDY Judy)

FIND_PATH(INCLUDE_CODA coda/coda.h)
INCLUDE_DIRECTORIES(${INCLUDE_CODA})
FIND_LIBRARY(LIB_CODA coda PATHS /usr/lib /usr/local/lib /usr/lib64 /usr/local/lib64)

AUX_SOURCE_DIRECTORY(blizzard/ SRC_BLIZZARD)
ADD_EXECUTABLE(blizzard ${SRC_BLIZZARD})
TARGET_LINK_LIBRARIES(blizzard ${LIB_CODA} ${LIB_JUDY} ${LIB_EXPAT} pthread dl)

INSTALL(FILES blizzard/plugin.hpp DESTINATION include/blizzard)
INSTALL(TARGETS blizzard DESTINATION bin)

MACRO (INSTALL_TEMPLATE sub)
  STRING (REGEX REPLACE "\\.in$" "" ${sub}_NOIN ${sub})
  CONFIGURE_FILE (${sub} ${PROJECT_BINARY_DIR}/auto/${${sub}_NOIN})
  INSTALL (FILES ${PROJECT_BINARY_DIR}/auto/${${sub}_NOIN} ${ARGN})
ENDMACRO (INSTALL_TEMPLATE)

INSTALL_TEMPLATE(blizzard/blizzard.xml.in DESTINATION etc/blizzard)

